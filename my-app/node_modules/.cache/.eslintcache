[{"C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\index.js":"1","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\App.js":"3","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Components\\NaviBar.js":"4","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Pages\\About.js":"5","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Pages\\Rent.js":"6","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Pages\\DetailedTruck.js":"7","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Components\\TruckCard.js":"8","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Components\\IntervalSelector.js":"9","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Components\\data.js":"10","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Supporting Files\\reducer.js":"11","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Supporting Files\\context.js":"12","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Pages\\History.js":"13","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Supporting Files\\NetworkRequests.js":"14","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Pages\\register.js":"15","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Supporting Files\\auth.js":"16","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Supporting Files\\profile.js":"17","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Pages\\login.js":"18","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Components\\CSRFToken.js":"19"},{"size":805,"mtime":1670777887383,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1665740497493,"results":"22","hashOfConfig":"21"},{"size":2204,"mtime":1671356014689,"results":"23","hashOfConfig":"21"},{"size":2151,"mtime":1671357275819,"results":"24","hashOfConfig":"21"},{"size":408,"mtime":1668871303091,"results":"25","hashOfConfig":"21"},{"size":3988,"mtime":1670773612884,"results":"26","hashOfConfig":"21"},{"size":3481,"mtime":1669556416292,"results":"27","hashOfConfig":"21"},{"size":2053,"mtime":1670181072366,"results":"28","hashOfConfig":"21"},{"size":1069,"mtime":1670181008145,"results":"29","hashOfConfig":"21"},{"size":1665,"mtime":1668969292332,"results":"30","hashOfConfig":"21"},{"size":4550,"mtime":1671313524965,"results":"31","hashOfConfig":"21"},{"size":368,"mtime":1671299786833,"results":"32","hashOfConfig":"21"},{"size":1882,"mtime":1670178374826,"results":"33","hashOfConfig":"21"},{"size":2320,"mtime":1671300753316,"results":"34","hashOfConfig":"21"},{"size":2429,"mtime":1671360718010,"results":"35","hashOfConfig":"21"},{"size":3448,"mtime":1671363145118,"results":"36","hashOfConfig":"21"},{"size":0,"mtime":1671301976308,"results":"37","hashOfConfig":"21"},{"size":1798,"mtime":1671360729426,"results":"38","hashOfConfig":"21"},{"size":1155,"mtime":1671363292026,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"nucwbp",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"43"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"43"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"43"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"43"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\index.js",[],[],[],"C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\reportWebVitals.js",[],[],"C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\App.js",["109"],[],"import React, {useEffect, useReducer} from 'react';\nimport {Route, BrowserRouter as Router, Routes} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NaviBar from \"./Components/NaviBar\";\nimport About from \"./Pages/About\";\nimport Rent from \"./Pages/Rent\";\nimport DetailedTruck from \"./Pages/DetailedTruck\";\nimport {\n    reducer,\n    GET_SELECTED_TRUCK_FROM_LOCAL,\n    SET_SELECTED_TRUCK_FOR_LOCAL\n} from \"./Supporting Files/reducer\";\nimport {defaultState, Context} from \"./Supporting Files/context\";\nimport History from \"./Pages/History\";\nimport {fetchBrand, fetchBrands, fetchOrders, fetchTruck, fetchTrucks} from \"./Supporting Files/NetworkRequests\";\nimport Register from \"./Pages/register\";\nimport Login from \"./Pages/login\";\n\nfunction App() {\n    const [state, dispatch] = useReducer(reducer, defaultState);\n\n    useEffect(() => {\n        dispatch({\n            type: GET_SELECTED_TRUCK_FROM_LOCAL,\n            payload: {}\n        })\n    }, [state.id])\n\n    useEffect(()=>{\n        console.log(\"STATE RELOAD IN APP\")\n        console.log(state)\n    },[state])\n\n    useEffect(() => {\n        console.log(\"APP\")\n        console.log(state)\n        dispatch({\n            type: SET_SELECTED_TRUCK_FOR_LOCAL,\n            payload: {}\n        })\n    }, [state.selectedTruck])\n\n\n\n    return (\n        <Context.Provider value={{\n            fetchOrders,\n            fetchTrucks,\n            fetchBrands,\n            fetchTruck,\n            fetchBrand,\n            state, dispatch\n        }}>\n            <Router>\n                <React.StrictMode>\n                    <NaviBar/>\n                    <Routes>\n                        <Route exact path=\"/about\" element={<About/>}/>\n                        <Route  path=\"/\" element={<Rent/>}/>\n                        <Route  path=\"/register\" element={<Register/>}/>\n                        <Route  path=\"/login\" element={<Login/>}/>\n                        <Route exact path=\"rent/:id\" element={<DetailedTruck/>}/>\n                        <Route exact path=\"history/:id\" element={<History/>}/>\n                    </Routes>\n                </React.StrictMode>\n            </Router>\n        </Context.Provider>\n);\n}\n\nexport default App;","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Components\\NaviBar.js",["110","111"],[],"import { Link, use } from  'react-router-dom'\r\nimport { Fragment } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Navbar, Button, Nav } from 'react-bootstrap';\r\nimport React, {useContext} from \"react\";\r\nimport {Context} from \"../Supporting Files/context\";\r\nimport {Switch} from \"@mui/material\";\r\nimport {SWITCH_ID} from \"../Supporting Files/reducer\";\r\nimport {logout} from \"../Supporting Files/auth\";\r\n\r\nconst linkStyle = {\r\n    margin: \"6px\",\r\n    textDecoration: \"none\",\r\n    color: \"hsla(0,0%,100%,0.55)\",\r\n    fontSize: \"18px\"\r\n};\r\n\r\nconst brandStyle = {\r\n    margin: \"8px\",\r\n    textDecoration: \"none\",\r\n    color: \"hsla(0,0%,100%,0.55)\",\r\n    fontSize: \"24px\"\r\n};\r\n\r\n\r\nfunction NaviBar() {\r\n    const { state, dispatch } = useContext(Context)\r\n\r\n    const authLinks = (\r\n        <Nav.Link><Link to=\"/login\" style={linkStyle} onClick={logout}>LogOut</Link></Nav.Link>\r\n    );\r\n\r\n    const guestLinks = (\r\n        <>\r\n            <Nav.Link><Link to=\"/login\" style={linkStyle}>LogIn</Link></Nav.Link>\r\n            <Nav.Link><Link to=\"/register\" style={linkStyle}>SignUp</Link></Nav.Link>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand><Link to=\"/\" style={brandStyle}>Xonest transport</Link></Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"me-auto\">\r\n                    <Nav.Link><Link to=\"/\" style={linkStyle}>Rent</Link></Nav.Link>\r\n                    <Nav.Link><Link to=\"/about\" style={linkStyle}>About</Link></Nav.Link>\r\n                    <Nav.Link><Link to={`/history/${state.id}`} style={linkStyle}>History</Link></Nav.Link>\r\n                    <Button variant=\"primary\" onClick={ () => dispatch({\r\n                        type: SWITCH_ID,\r\n                        payload: {}\r\n                    })}>Switch</Button>\r\n                </Nav>\r\n                { state.isAuthenticated ? authLinks : guestLinks }\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default NaviBar;","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Pages\\About.js",["112","113"],[],"import Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst aboutStyle = {\r\n    margin: \"8px 16px\"\r\n};\r\n\r\nfunction About() {\r\n    return (\r\n        <div class=\"about\" style={aboutStyle}>\r\n            <h3>Xonest transport one of the most popular and reliable company.</h3>\r\n            <p> We care about our customers</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Pages\\Rent.js",["114","115","116","117","118","119","120"],[],"import React, {useContext, useEffect} from 'react';\r\nimport {Col, Row, Button, Form} from \"react-bootstrap\";\r\nimport TruckCard from \"../Components/TruckCard\";\r\nimport IntervalSelector from \"../Components/IntervalSelector\";\r\nimport {LOAD_TRUCKS, SET_MAX_PRICE, SET_MIN_PRICE, SWITCH_ID} from \"../Supporting Files/reducer\";\r\nimport {Context} from \"../Supporting Files/context\";\r\nimport {checkUserIsAuth} from \"../App\";\r\nimport {postOrder} from \"../Supporting Files/NetworkRequests\";\r\n\r\nconst TableBlockStyle = {\r\n    margin: \"20px 15%\",\r\n    textAlign: 'center',\r\n}\r\n\r\nconst TableCardStyle = {\r\n    display: \"inline-block\",\r\n    margin: \"8px 8px 8px 0px\",\r\n}\r\n\r\nfunction Rent() {\r\n    const {\r\n        fetchTrucks,\r\n        fetchBrands,\r\n        state,\r\n        dispatch\r\n    } = useContext(Context)\r\n\r\n    const tryPost = () => {\r\n        if (state.id != 0) {\r\n            postOrder({\r\n                price: state.trucks.find(element => element.pk == state.selectedTruck).price,\r\n                address_take: \"Москва\",\r\n                time: state.time,\r\n                car: state.selectedTruck,\r\n                user: state.id\r\n            })\r\n        } else {\r\n            alert(\"Авторизируйтесь, чтобы оформить заказ\")\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchTrucks(state.minPrice, state.maxPrice).then(trucks => {\r\n            fetchBrands(trucks).then(brands => {\r\n                dispatch({\r\n                    type: LOAD_TRUCKS,\r\n                    payload: {\r\n                        trucks: trucks,\r\n                        brands: brands\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    },[state.minPrice, state.maxPrice])\r\n\r\n    useEffect(()=>{\r\n    },[state])\r\n\r\n    return (\r\n        <>\r\n            <IntervalSelector/>\r\n            <div style={TableBlockStyle}>\r\n                <Form.Group>\r\n                    <Row>\r\n                        <Form.Group className=\"mb-3\" style={{width: \"160px\"}}>\r\n                            <Form.Label>Min</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"---\" onChange={event => dispatch({ type: SET_MIN_PRICE, payload: { minPrice: event.target.value} })}/>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" style={{width: \"160px\"}}>\r\n                            <Form.Label>Max</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"---\" onChange={event => dispatch({ type: SET_MAX_PRICE, payload: { maxPrice: event.target.value} })}/>\r\n                        </Form.Group>\r\n                    </Row>\r\n                </Form.Group>\r\n                <Row className=\"g-4\">\r\n                    {state.trucks.map((item, index)=>{\r\n                        console.log(state.selectedTruck)\r\n                        return<Col>\r\n                            <TruckCard\r\n                                key={item.pk}\r\n                                id={item.pk}\r\n                                name={item.title}\r\n                                price={item.price}\r\n                                brand={state.brands[index]}\r\n                                capacity={item.capacity}\r\n                                image={item.photo}\r\n                                isSelected={state.selectedTruck == item.pk}/>\r\n                        </Col>\r\n                    })}\r\n                </Row>\r\n                <Button variant=\"primary\"\r\n                        style={{\r\n                            display: \"block\",\r\n                            marginLeft: \"auto\",\r\n                            marginRight: \"auto\",\r\n                            width: \"160px\",\r\n                            height: \"80px\",\r\n                            fontSize: \"30px\"}}\r\n                        onClick={tryPost}\r\n                >\r\n                    Заказать\r\n                </Button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Rent;","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Pages\\DetailedTruck.js",["121"],[],"import React, {useContext, useEffect} from 'react';\r\nimport {Card} from \"react-bootstrap\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {Breadcrumbs} from \"@mui/material\";\r\nimport {Context} from \"../Supporting Files/context\";\r\nimport {LOAD_TRUCK} from \"../Supporting Files/reducer\";\r\nimport {createRoot} from \"react-dom/client\";\r\n\r\n\r\nconst cardStyle = {\r\n    margin: \"8px 30%\",\r\n    textColor: \"black\",\r\n    textAlign: \"center\"\r\n};\r\n\r\nconst cardImage = {\r\n    width: \"100%\",\r\n    height: \"500px\",\r\n};\r\n\r\nfunction DetailedTruck() {\r\n    const {id} = useParams();\r\n\r\n    const {\r\n        fetchTruck,\r\n        fetchBrand,\r\n        dispatch,\r\n        state\r\n    } = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        fetchTruck(id).then(truck => {\r\n            fetchBrand(truck.brand).then(brand => {\r\n                dispatch({\r\n                    type: LOAD_TRUCK,\r\n                    payload: {\r\n                        truck: truck,\r\n                        brand: brand\r\n                    }\r\n                })\r\n                createRoot()\r\n            })\r\n        })\r\n        return () => {\r\n\r\n        }\r\n    },[])\r\n\r\n   /* useEffect(()=>{\r\n        const  getTruck = async () => {\r\n            const res = await fetch(`/api/cars/${id}`)\r\n                .then((response) => {\r\n                    return response.json();\r\n                }).catch(()=>{\r\n                    return {resultCount:0, results:[]}\r\n                })\r\n            console.log(res)\r\n            setData(res)\r\n\r\n            const resBrand = await fetch(`/api/brands/${res.brand}`)\r\n                .then((response) => {\r\n                    return response.json();\r\n                }).catch(()=>{\r\n                    return {resultCount:0, results:[]}\r\n                })\r\n            console.log(resBrand)\r\n            setBrand(resBrand)\r\n        }\r\n\r\n        getTruck();\r\n    },[])*/\r\n\r\n    if (!state.truck || !state.brand) {\r\n        return <></>\r\n    } else {\r\n        return (\r\n            <>\r\n                <Breadcrumbs style={cardStyle} aria-label='breadcrumb'>\r\n                    <Link style={{textDecoration: 'none'}} to='/'>Rent</Link>\r\n                    <Link style={{textDecoration: 'none'}}\r\n                          to={`/rent/${id}`}>{state.brand.title + \" \" + state.truck.title}</Link>\r\n                </Breadcrumbs>\r\n                <Card style={cardStyle}>\r\n                    <Card.Img style={cardImage} className=\"img-fluid\" variant=\"top\" src={state.truck.photo} height={100}\r\n                              width={100}/>\r\n                    <Card.Body>\r\n                        <Card.Title>{state.brand.title + \" \" + state.truck.title}</Card.Title>\r\n                    </Card.Body>\r\n                    <ListGroup className=\"list-group-flush\">\r\n                        <ListGroup.Item>Объём: {state.truck.capacity}м<sup>3</sup></ListGroup.Item>\r\n                        <ListGroup.Item>Стоимость: {state.truck.price}р.</ListGroup.Item>\r\n                        <ListGroup.Item>Страна: {state.brand.country}</ListGroup.Item>\r\n                        <ListGroup.Item>Описание: {state.truck.description}</ListGroup.Item>\r\n                        <ListGroup.Item>Грузоподъемность: {state.truck.payload} т.</ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DetailedTruck;","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Components\\TruckCard.js",[],[],"C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Components\\IntervalSelector.js",[],[],"C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Components\\data.js",[],[],[],"C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Supporting Files\\reducer.js",["122","123","124","125"],[],"import {defaultState} from \"./context\";\r\n\r\nexport const\r\n    TOGGLE_TRUCK = 'TOGGLE_TRUCK',\r\n    LOAD_TRUCKS = 'LOAD_TRUCKS',\r\n    LOAD_TRUCK = 'LOAD_TRUCK',\r\n    GET_SELECTED_TRUCK_FROM_LOCAL = 'GET_SELECTED_TRUCK_FROM_LOCAL',\r\n    SET_SELECTED_TRUCK_FOR_LOCAL = 'SET_SELECTED_TRUCK_FROM_LOCAL',\r\n    LOAD_ORDERS = \"LOAD_ORDERS\",\r\n    SWITCH_ID = \"SWITCH_ID\",\r\n    POST_ORDER = \"POST_ORDER\",\r\n    DATETIME_CHANGE = \"DATETIME_CHANGE\",\r\n    SET_MIN_PRICE = \"SET_MIN_PRICE\",\r\n    SET_MAX_PRICE = \"SET_MAX_PRICE\",\r\n\r\n    REGISTER_SUCCESS = \"REGISTER_SUCCESS\",\r\n    REGISTER_FAIL = \"REGISTER_FAIL\",\r\n    LOGIN_SUCCESS = \"LOGIN_SUCCESS\",\r\n    LOGIN_FAIL = \"LOGIN_FAIL\",\r\n    LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\",\r\n    LOGOUT_FAIL = \"LOGOUT_FAIL\",\r\n    AUTHENTICATED_SUCCESS = \"AUTHENTICATED_SUCCESS\",\r\n    AUTHENTICATED_FAIL = \"AUTHENTICATED_FAIL\",\r\n\r\n    LOAD_USER_PROFILE_SUCCESS = \"LOAD_USER_PROFILE_SUCCESS\",\r\n    LOAD_USER_PROFILE_FAIL = \"LOAD_USER_PROFILE_FAIL\"\r\n\r\nexport const reducer = (state, action) => {\r\n// type, payload\r\n    const { type, payload } = action\r\n    switch(type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: payload\r\n            }\r\n        case REGISTER_SUCCESS:\r\n            console.log(\"REGISTER_SUCCESS\")\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            console.log(\"LOGIN_SUCCESS\")\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case LOGOUT_SUCCESS:\r\n        case REGISTER_FAIL:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_FAIL:\r\n        case SET_MIN_PRICE:\r\n            return {\r\n                ...state,\r\n                minPrice: payload.minPrice\r\n            }\r\n        case SET_MAX_PRICE:\r\n            return {\r\n                ...state,\r\n                maxPrice: payload.maxPrice\r\n            }\r\n        case DATETIME_CHANGE:\r\n            console.log(\"DATETIME_CHANGE\")\r\n            const newTime = new Date(payload.time).toJSON()\r\n            return {\r\n                ...state,\r\n                time: newTime\r\n            }\r\n        case POST_ORDER:\r\n            console.log(\"POST_ORDER\")\r\n            return {\r\n                state\r\n            }\r\n        case SWITCH_ID:\r\n            console.log(\"SWITCH_ID\")\r\n            return {\r\n                ...state,\r\n                selectedTruck: {},\r\n                id: state.id == 0 ? 1 : 0\r\n            }\r\n        case LOAD_ORDERS:\r\n            console.log(\"LOAD_ORDERS\")\r\n            return {\r\n                ...state,\r\n                orders: payload.orders\r\n            }\r\n        case LOAD_TRUCKS:\r\n            console.log(\"LOAD_TRUCKS\")\r\n            return {\r\n                ...state,\r\n                trucks: payload.trucks,\r\n                brands: payload.brands\r\n            }\r\n        case LOAD_TRUCK:\r\n            console.log(\"LOAD_TRUCK SUCCESS\")\r\n            return {\r\n                ...state,\r\n                truck: payload.truck,\r\n                brand: payload.brand\r\n            }\r\n        case TOGGLE_TRUCK:\r\n            console.log(\"TOGGLE_TRUCK\")\r\n            if (state.selectedTruck == payload.id) {\r\n                return {\r\n                    ...state,\r\n                    selectedTruck: {}\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    selectedTruck: payload.id,\r\n                }\r\n            }\r\n\r\n        case GET_SELECTED_TRUCK_FROM_LOCAL:\r\n            console.log(`GET_SELECTED_TRUCK_FROM_LOCAL`)\r\n            try {\r\n                const raw = localStorage.getItem(`BMSTU USER: ${state.id}`) || {}\r\n                const prepared = JSON.parse(raw)\r\n                if (prepared.id == state.id) {\r\n                    return {\r\n                        ...state,\r\n                        selectedTruck: prepared.selectedTruck,\r\n                    }\r\n                } else {\r\n                    return state\r\n                }\r\n            } catch { return state }\r\n\r\n        case SET_SELECTED_TRUCK_FOR_LOCAL:\r\n            try {\r\n            console.log(`SET_SELECTED_TRUCK_FOR_LOCAL`)\r\n            localStorage.setItem(`BMSTU USER: ${state.id}`, JSON.stringify({\r\n                id: state.id,\r\n                selectedTruck: state.selectedTruck\r\n            }))\r\n            return state\r\n            } catch { return state }\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Supporting Files\\context.js",[],[],"C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Pages\\History.js",["126","127","128","129"],[],"import Table from 'react-bootstrap/Table';\r\nimport {Col} from \"react-bootstrap\";\r\nimport TruckCard from \"../Components/TruckCard\";\r\nimport React, {useContext, useEffect} from \"react\";\r\nimport {Context} from \"../Supporting Files/context\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {LOAD_ORDERS} from \"../Supporting Files/reducer\";\r\n\r\nfunction History() {\r\n    const {id} = useParams()\r\n\r\n    const {\r\n        fetchOrders,\r\n        dispatch,\r\n        state\r\n    } = useContext(Context)\r\n\r\n    useEffect(()=>{\r\n        fetchOrders(id).then(orders => {\r\n            console.log(\"fetchOrders\")\r\n            console.log(orders)\r\n            dispatch({\r\n                type: LOAD_ORDERS,\r\n                payload: { orders: orders }\r\n            })\r\n        })\r\n    }, [])\r\n\r\n\r\n    if (id != 0) {\r\n        return (\r\n            <Table striped bordered hover style={{\r\n                width: \"60%\",\r\n                textAlign: \"center\",\r\n                margin: \"24px auto\"\r\n            }}>\r\n                <thead>\r\n                <tr>\r\n                    <th>Номер</th>\r\n                    <th>Стоимость р.</th>\r\n                    <th>Дата заказа</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {state.orders.map((item, index) => {\r\n                    return <tr>\r\n                        <th>{index+1}</th>\r\n                        <th>{item.price}</th>\r\n                        <th>{(new Date(item.time)).toLocaleDateString()}</th>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n        );\r\n    } else {\r\n        return (<h2 style={{\r\n            textAlign: \"center\",\r\n            marginTop: \"16px\"\r\n        }}>Авторизируйтесь, чтобы посмотреть список покупок</h2>)\r\n    }\r\n}\r\n\r\nexport default History;","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Supporting Files\\NetworkRequests.js",["130"],[],"import axios from \"axios\";\r\n\r\nexport const postOrder = async (order) => {\r\n    console.log(order)\r\n    axios.post('api/orders/', order)\r\n        .then(function (response) {\r\n            console.log(response);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n            alert(\"Произошла ошибка при отправке.\\nВозможно, вы не выбрали одно из полей.\")\r\n        });\r\n}\r\n\r\nexport const fetchTrucks = async (min, max) => {\r\n    const res = await fetch(`api/cars/?price_min=${min}&price_max=${max}`)\r\n        .then((response) => {\r\n            return response.json();\r\n        }).catch(() => {\r\n            return {resultCount: 0, results: []}\r\n        })\r\n    console.log(res)\r\n    return res\r\n}\r\n\r\nexport const fetchBrands = async (tempTrucks) => {\r\n    const res = []\r\n    console.log(tempTrucks)\r\n    for (const element of tempTrucks) {\r\n        const tempRes = await fetch(`api/brands/${element.brand}`)\r\n            .then((response) => {\r\n                return response.json();\r\n            }).catch(() => {\r\n                return {resultCount: 0, results: []}\r\n            })\r\n        res.push(tempRes.title)\r\n    }\r\n    console.log(res)\r\n    return res\r\n}\r\n\r\nexport const fetchTruck = async (truckID) => {\r\n    const res = await fetch(`api/cars/${truckID}`)\r\n        .then((response) => {\r\n            return response.json();\r\n        }).catch(() => {\r\n            return {resultCount: 0, results: []}\r\n        })\r\n    console.log(\"fetchTruck\")\r\n    console.log(res)\r\n    return res\r\n}\r\n\r\nexport const fetchBrand = async (brandID) => {\r\n    const res = await fetch(`api/brands/${brandID}`)\r\n        .then((response) => {\r\n            return response.json();\r\n        }).catch(()=>{\r\n            return {resultCount:0, results:[]}\r\n        })\r\n    console.log(\"fetchBrand\")\r\n    console.log(res)\r\n    return res\r\n}\r\n\r\nexport const fetchOrders = async (userID) => {\r\n    var res = await fetch(`api/orders`)\r\n        .then((response) => {\r\n            return response.json();\r\n        }).catch(()=>{\r\n            return {resultCount:0, results:[]}\r\n        })\r\n    res = res.filter(order => order.user == userID)\r\n    res = res.sort((a,b) => a.time < b.time)\r\n    console.log(\"fetchOrders\")\r\n    console.log(res)\r\n    return res\r\n}","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Pages\\register.js",["131","132","133"],[],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {Navigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { register } from \"../Supporting Files/auth\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {Context} from \"../Supporting Files/context\";\r\nimport {REGISTER_FAIL} from \"../Supporting Files/reducer\";\r\nimport CSRFToken from '../Components/CSRFToken';\r\n\r\nexport default function Register() {\r\n    const { state, dispatch } = useContext(Context)\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        password: '',\r\n        re_password: ''\r\n    });\r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n\r\n    const { username, password, re_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (password === re_password) {\r\n            console.log(username, password, re_password)\r\n            register(username, password, re_password).then(status => {\r\n                dispatch({ type: status, payload: {} })\r\n            })\r\n            setAccountCreated(true);\r\n        }\r\n    };\r\n\r\n    if (state.isAuthenticated)\r\n        return <Navigate to='/'/>;\r\n    else if (accountCreated)\r\n        return <Navigate to='/login'/>;\r\n\r\n    return (\r\n        <Form onSubmit={event => onSubmit(event)} style={{'margin':'20px auto', 'width':'400px'}}>\r\n            <CSRFToken />\r\n            <Form.Group className=\"mb-3\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control type=\"username\" placeholder=\"Enter username\" name=\"username\" onChange={e => onChange(e)}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" onChange={e => onChange(e)}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Repeat password\" name=\"re_password\" onChange={e => onChange(e)}/>\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    );\r\n}","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Supporting Files\\auth.js",[],[],"C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Supporting Files\\profile.js",[],[],"C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Pages\\login.js",["134"],[],"import React, {useContext, useState} from 'react';\r\nimport {Navigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {login} from \"../Supporting Files/auth\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {Context} from \"../Supporting Files/context\";\r\nimport CSRFToken from '../Components/CSRFToken';\r\n\r\nexport default function Login() {\r\n    const { state, dispatch } = useContext(Context)\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        password: ''\r\n    });\r\n\r\n    const { username, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        console.log(username, password)\r\n        login(username, password).then(status => {\r\n            dispatch({ type: status, payload: {} })\r\n        })\r\n    };\r\n\r\n    if (state.isAuthenticated) {\r\n        return <Navigate to='/'/>\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={event => onSubmit(event)} style={{'margin':'20px auto', 'width':'400px'}}>\r\n            <CSRFToken />\r\n            <Form.Group className=\"mb-3\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control type=\"username\" placeholder=\"Enter username\" name=\"username\" onChange={e => onChange(e)}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" onChange={e => onChange(e)}/>\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    );\r\n}","C:\\Users\\prite\\WebstormProjects\\lab4\\my-app\\src\\Components\\CSRFToken.js",[],[],{"ruleId":"135","severity":1,"message":"136","line":41,"column":8,"nodeType":"137","endLine":41,"endColumn":29,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":1,"column":16,"nodeType":"141","messageId":"142","endLine":1,"endColumn":19},{"ruleId":"139","severity":1,"message":"143","line":7,"column":9,"nodeType":"141","messageId":"142","endLine":7,"endColumn":15},{"ruleId":"139","severity":1,"message":"144","line":1,"column":8,"nodeType":"141","messageId":"142","endLine":1,"endColumn":12},{"ruleId":"139","severity":1,"message":"145","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":14},{"ruleId":"139","severity":1,"message":"146","line":5,"column":52,"nodeType":"141","messageId":"142","endLine":5,"endColumn":61},{"ruleId":"139","severity":1,"message":"147","line":7,"column":9,"nodeType":"141","messageId":"142","endLine":7,"endColumn":24},{"ruleId":"139","severity":1,"message":"148","line":15,"column":7,"nodeType":"141","messageId":"142","endLine":15,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":29,"column":22,"nodeType":"151","messageId":"152","endLine":29,"endColumn":24},{"ruleId":"149","severity":1,"message":"153","line":31,"column":64,"nodeType":"151","messageId":"152","endLine":31,"endColumn":66},{"ruleId":"135","severity":1,"message":"154","line":54,"column":7,"nodeType":"137","endLine":54,"endColumn":39,"suggestions":"155"},{"ruleId":"149","severity":1,"message":"153","line":87,"column":65,"nodeType":"151","messageId":"152","endLine":87,"endColumn":67},{"ruleId":"135","severity":1,"message":"156","line":45,"column":7,"nodeType":"137","endLine":45,"endColumn":9,"suggestions":"157"},{"ruleId":"139","severity":1,"message":"158","line":1,"column":9,"nodeType":"141","messageId":"142","endLine":1,"endColumn":21},{"ruleId":"149","severity":1,"message":"153","line":81,"column":30,"nodeType":"151","messageId":"152","endLine":81,"endColumn":32},{"ruleId":"149","severity":1,"message":"153","line":105,"column":37,"nodeType":"151","messageId":"152","endLine":105,"endColumn":39},{"ruleId":"149","severity":1,"message":"153","line":122,"column":33,"nodeType":"151","messageId":"152","endLine":122,"endColumn":35},{"ruleId":"139","severity":1,"message":"159","line":2,"column":9,"nodeType":"141","messageId":"142","endLine":2,"endColumn":12},{"ruleId":"139","severity":1,"message":"160","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":17},{"ruleId":"135","severity":1,"message":"161","line":27,"column":8,"nodeType":"137","endLine":27,"endColumn":10,"suggestions":"162"},{"ruleId":"149","severity":1,"message":"150","line":30,"column":12,"nodeType":"151","messageId":"152","endLine":30,"endColumn":14},{"ruleId":"149","severity":1,"message":"153","line":73,"column":42,"nodeType":"151","messageId":"152","endLine":73,"endColumn":44},{"ruleId":"139","severity":1,"message":"163","line":1,"column":28,"nodeType":"141","messageId":"142","endLine":1,"endColumn":37},{"ruleId":"139","severity":1,"message":"164","line":3,"column":10,"nodeType":"141","messageId":"142","endLine":3,"endColumn":17},{"ruleId":"139","severity":1,"message":"165","line":8,"column":9,"nodeType":"141","messageId":"142","endLine":8,"endColumn":22},{"ruleId":"139","severity":1,"message":"164","line":3,"column":10,"nodeType":"141","messageId":"142","endLine":3,"endColumn":17},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.","ArrayExpression",["166"],"no-unused-vars","'use' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'SWITCH_ID' is defined but never used.","'checkUserIsAuth' is defined but never used.","'TableCardStyle' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'dispatch', 'fetchBrands', and 'fetchTrucks'. Either include them or remove the dependency array.",["167"],"React Hook useEffect has missing dependencies: 'dispatch', 'fetchBrand', 'fetchTruck', and 'id'. Either include them or remove the dependency array.",["168"],"'defaultState' is defined but never used.","'Col' is defined but never used.","'TruckCard' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'fetchOrders', and 'id'. Either include them or remove the dependency array.",["169"],"'useEffect' is defined but never used.","'connect' is defined but never used.","'REGISTER_FAIL' is defined but never used.",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [state, state.selectedTruck]",{"range":"178","text":"179"},"Update the dependencies array to be: [state.minPrice, state.maxPrice, fetchTrucks, fetchBrands, dispatch]",{"range":"180","text":"181"},"Update the dependencies array to be: [dispatch, fetchBrand, fetchTruck, id]",{"range":"182","text":"183"},"Update the dependencies array to be: [dispatch, fetchOrders, id]",{"range":"184","text":"185"},[1276,1297],"[state, state.selectedTruck]",[1644,1676],"[state.minPrice, state.maxPrice, fetchTrucks, fetchBrands, dispatch]",[1150,1152],"[dispatch, fetchBrand, fetchTruck, id]",[774,776],"[dispatch, fetchOrders, id]"]